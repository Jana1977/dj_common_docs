
GIT COMMANDS:

> git init
	* It initializes the .git folder and mostly there is no need to go here. 
	* after running this command it displays ins tdout " Initialized empty git repository in path---- "
	* Running this command alone in a folder with files will not add the existing files to the staging area - for that we have to use the "git add" cmd.

> git config --global user.name 'janarthana Subramani'
> git config --global user.email 'datajilla@gmail.com'

> git add <file>
	* adds the files in the project to the staging area/index

> git status
	* Check status of working tree

> git commit
	* Commit changes in Index
	* Takes everything from the staging area and put all into the local repository
	* git commit 

> git push
	* push local repo to remote

> git pull
	* Pull latest from Remote Repo

> git clone
	* Copy a remote repo into your current folder
	* Clone using the link after going to a new folder where we want the repo to be copied. 

> git branch mybranch
	* Creates a branch

> git checkout mybranch
	* switches to that branch 
	* this is similar to how I created a branch "feature/da-11712-new-dag-supp-optout" in Sourcetree
	* Once i am here then whatever files i create are being tracked side this branch. 
	* Switch back and forth master and branch to see if the changes are missing in master. 

> git merge mybranch 
	* Run this command after checking out to the master branch
	* This will merge all changes from mybranch to the master
	* also use the -m for inline merging with comments

> git remote 
	* This command gives if there is any remote repository and in my case it showed the origin.

		TFGELSOS3516547:airflow-media-edm jsubramani$ git remote
		origin		
	* if not added then we have to run the below command 
	* git remote add origin https://github.com/<username>/myappsample.git

> to push to the remote repositiory master branch run the command below (will ask to provide credentials)
	* git push -u origin master
	* After adding the remote repo the above command need not run again and just push would do it.
	* git push 

gui/command line tools:

GITBASH
CMD
SOURCETREE - used in TFG
maybe GITKRAKEN 

Other GIT commands:
git --version
git restore --staged <file> ==> to unstage this file(s)
git restore <file> ==> to discard changes in owrking directory

git rm --cached <filename>   (Remove a file you added to STAGING AREA)

git add *.html
git add .         ==> ADD ALL THE FILES.

.gitignore
----------
log.txt  (file to ignore)
/dir2 (ignore a whole folder)
*.txt 
------



Git other terminologies:
working directory - is the directory where the .git folder resides along with other project files? In TFG case its /code/airflow-media-edm  ?

Working tree - 
After got commit and no files to commit - it will show "WORKING TREE CLEAN"


TECHSTYLE ENVIRONMENT:
=======================

* I have the .git folder under /code/airflow-media-edm

* also there is a file called .gitignore under /code/airflow-media-edm and the content is :
------------
.autoenv*.zsh

# python build files
*.egg*

*.env

# VS Studio Stuff #
Debug/
*.user
*.suo
*.rdl.data
**/obj/
**/bin/

**/.idea/

# tableau files #
*.tde
*.tdsx
*.twbx

**secrets*

# Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
*.xlsx
*.xlsm
*.xltx
*.xls
*.xlt
*.avro

# Logs and databases #
######################
*.log
#*.sql
#*.sqlite


# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# MS Office Temp Files #
######################
~$*


*.csv
*.pyc

.mypy_cache*

------------
TEST AND LEARN:

> WHEN I ran the "git status" in my terminal after the new dag is created. i see the below output. 
> This means that the new dag file is already in the staging area (meaning a GIT ADD has already been run on it) and while its there it got modified again and the changes werent done to the stagign area again,.
> We need to run "GIT ADD again to update the latest change to the staging area"

> HOW TO RUN the "GIT ADD" command in SOURCETREE ?

On branch feature/janatest
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   dags/media/outbound/media_outbound_ccpa_suppression_deletion_list.py

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   dags/media/outbound/media_outbound_ccpa_suppression_deletion_list.py


************ !!!! 	When I modified the CCPA dag being inside of the FLUS_BLISSPOINT branch - i had to REVERT the changes done to the CCPA dag.  

	TFGELSOS3516547:airflow-media-edm jsubramani$ git status
On branch feature/DA-11778_Bliss_Flus_File_To_Vendor
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   dags/media/outbound/media_outbound_ccpa_suppression_deletion_list.py

no changes added to commit (use "git add" and/or "git commit -a")
TFGELSOS3516547:airflow-media-edm jsubramani$ 
TFGELSOS3516547:airflow-media-edm jsubramani$ git restore dags/media/outbound/media_outbound_ccpa_suppression_deletion_list.py
TFGELSOS3516547:airflow-media-edm jsubramani$ 
TFGELSOS3516547:airflow-media-edm jsubramani$ 
TFGELSOS3516547:airflow-media-edm jsubramani$ git status
On branch feature/DA-11778_Bliss_Flus_File_To_Vendor
nothing to commit, working tree clean
TFGELSOS3516547:airflow-media-edm jsubramani$ 
TFGELSOS3516547:airflow-media-edm jsubramani$ 

************ !!!! 	also to delete those UNWANTED branches i use the below command !!!!!!!!

TFGELSOS3516547:airflow-media-edm jsubramani$ git branch --list
  feature/DA-11712_new_dag_supp_optout
* feature/DA-11712_supp_optout_peerreview_changes
  feature/DA-11712_supp_optout_review_changes
  feature/DA-11778_Bliss_Flus_File_To_Vendor
  master
TFGELSOS3516547:airflow-media-edm jsubramani$ 
TFGELSOS3516547:airflow-media-edm jsubramani$ git branch -d feature/DA-11712_supp_optout_review_changes
error: The branch 'feature/DA-11712_supp_optout_review_changes' is not fully merged.
If you are sure you want to delete it, run 'git branch -D feature/DA-11712_supp_optout_review_changes'.
TFGELSOS3516547:airflow-media-edm jsubramani$ 
TFGELSOS3516547:airflow-media-edm jsubramani$ git branch -D feature/DA-11712_supp_optout_review_changes
Deleted branch feature/DA-11712_supp_optout_review_changes (was 7586217c8).
TFGELSOS3516547:airflow-media-edm jsubramani$ 
TFGELSOS3516547:airflow-media-edm jsubramani$ git branch -D feature/DA-11712_supp_optout_peerreview_changes
error: Cannot delete branch 'feature/DA-11712_supp_optout_peerreview_changes' checked out at '/Users/jsubramani/code/airflow-media-edm'
TFGELSOS3516547:airflow-media-edm jsubramani$ git branch -D feature/DA-11712_supp_optout_peerreview_changes
Deleted branch feature/DA-11712_supp_optout_peerreview_changes (was 425ae4242).

> when i had this error - Roshan said to pull the one change and when we tried it - it said remote branch not found.
> so it didnt let me PULL that one change below.
> Roshan asked me to delete the entire branch and create a new branch and refer the story and moveon with changes. 
> I created a new branch with slightly different name.

TFGELSOS3516547:airflow-media-edm jsubramani$ git status
On branch feature/DA-11712_new_dag_supp_optout
Your branch and 'origin/feature/DA-11712_new_dag_supp_optout' have diverged,
and have 32 and 1 different commits each, respectively.
  (use "git pull" to merge the remote branch into yours)
